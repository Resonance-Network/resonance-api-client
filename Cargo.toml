[package]
name = "substrate-api-client"
version = "1.17.0"
authors = ["Supercomputing Systems AG <info@scs.ch>"]
license = "Apache-2.0"
edition = "2021"
repository = "https://github.com/scs/substrate-api-client"
description = "Json-rpc client with helper functions compatible with any Substrate node"
readme = "README.md"
keywords = ["json", "rpc", "polkadot", "api", "blockchain"]
categories = ["no-std", "wasm"]

[workspace]
members = [
    ".",
    "keystore",
    "compose-macros",
    "examples/async",
    "examples/sync",
    "examples/wasm",
    "node-api",
    "test-no-std",
    "testing/async",
    "testing/sync",
]

[workspace.dependencies]
ac-primitives = { path = "primitives", version = "1.17", default-features = false }
ac-node-api = { path = "node-api", version = "1.17", default-features = false }
async-trait = "0.1"
codec = { package = "parity-scale-codec", version = "3.7", default-features = false, features = ["derive"] }
log = { version = "0.4", default-features = false }
maybe-async = { version = "0.2" }
frame-metadata = { version = "18.0", default-features = false, features = ["current", "serde_full", "decode"] }
serde_json = { version = "1.0.132", default-features = false }
scale-info = { version = "2.1", features = ["derive"] }
serde = { version = "1.0", default-features = false, features = ["derive"] }

sp-core = { version = "35.0.0", default-features = false, features = ["full_crypto", "serde"] }
sp-crypto-hashing = { version = "0.1.0", default-features = false }
sp-inherents = { version = "35.0.0", default-features = false }
sp-runtime = { version = "40.1.0", default-features = false, features = ["serde"] }
sp-runtime-interface = { version = "29.0.0", default-features = false }
sp-storage = { version = "22.0.0", default-features = false, features = ["serde"] }
sp-version = { version = "38.0.0", default-features = false, features = ["serde"] }
sp-weights = { version = "31.0.0", default-features = false, features = ["serde"] }
sp-application-crypto = { version = "39.0.0", default-features = false, features = ["full_crypto"] }
sp-staking = { version = "37.0.0", default-features = false, features = ["serde"] }
sp-keyring = { version = "40.0.0" }
sp-keystore = { version = "0.41.0" }
sc-keystore = { version = "34.0.0" }
frame-system = { version = "39.1.0", default-features = false }

pallet-balances = { version = "40.0.0", default-features = false }
pallet-sudo = { version = "39.0.0", default-features = false }
pallet-timestamp = { version = "38.0.0", default-features = false }
pallet-transaction-payment-rpc-runtime-api = { version = "39.0.0", default-features = false }


[dependencies]
codec.workspace = true
derive_more = { version = "2.0", default-features = false, features = ["from"] }
futures-util = { version = "0.3", default-features = false }
frame-metadata.workspace = true
hex = { version = "0.4", default-features = false, features = ["alloc"] }
log = { workspace = true }
maybe-async = { workspace = true}
serde.workspace = true
serde_json.workspace = true
async-trait.workspace = true

# crates.io std only
url = { version = "2.5", optional = true }

# websocket dependent features
jsonrpsee = { version = "0.24", optional = true, features = ["async-client", "client-ws-transport-tls", "jsonrpsee-types"] }
tungstenite = { version = "0.26", optional = true, features = ["native-tls", "url"] }
ws = { version = "0.9", optional = true, features = ["ssl"] }

# Substrate no_std dependencies
sp-core.workspace = true
sp-crypto-hashing.workspace = true
sp-inherents.workspace = true
sp-runtime.workspace = true
sp-runtime-interface.workspace = true
sp-storage.workspace = true
sp-version.workspace = true

# substrate std / wasm only
frame-support = { optional = true, git = "https://github.com/paritytech/polkadot-sdk.git", branch = "master" }

# local deps
ac-compose-macros = { path = "compose-macros", version = "1.17", default-features = false }
ac-node-api.workspace = true
ac-primitives.workspace =true
scale-info.workspace = true

[dev-dependencies]
ac-node-api = { path = "node-api", version = "1.17", features = ["mocks"] }
rococo-runtime = { git = "https://github.com/paritytech/polkadot-sdk.git", branch = "master" }

test-case = "3.1"

[features]
default = ["std", "jsonrpsee-client"]
# To support `no_std` builds in non-32 bit environments.
disable_target_static_assertions = [
    "sp-runtime-interface/disable_target_static_assertions",
]

# If this is active all the code compiles in synchronous mode. If not selected, code will compile to async mode.
sync-api = ["ac-compose-macros/sync-api", "maybe-async/is_sync"]

# Use the `jsonrpsee` crate for websocket communication. Does only provide async support and needs a tokio runtime.
# Provides convenience functions such as subscription callbacks.
# Most examples use the `jsonrpsee` feature and can be used for reference.
jsonrpsee-client = ["std", "jsonrpsee"]

# Use the `tungstenite` crate for websocket communication. No async support but has some reconnection capabilities.
# See the example `transfer_with_tungstenite_client` on how to use it.
tungstenite-client = ["std", "tungstenite", "sync-api"]

# Use the `ws` crate for websocket communication. No async support.
# Establishes a new connection for each request and therefore is limited in terms of performance.
# See the example `transfer_with_ws_client` on how to use it.
ws-client = ["std", "ws", "sync-api"]

# Enables functionality that helps to create extrinsics for `pallet-staking`.
# See the `StakingExtrinsics` trait and the `staking_batch_payout` example to get an understanding
# of the functionality this feature provides
# staking-xt = ["std", "ac-primitives/staking-xt"]

# Enables functionality that helps to create extrinsics for `pallet-contracts`.
# See the `ContractsExtrinsics` trait and the `contract_instantiate_with_code` example to get an understanding
# of the functionality this feature provides.
contracts-xt = ["std", "ac-primitives/contracts-xt"]

# Enables all std features of dependencies in case of std build.
std = [
    # crates.io no_std
    "codec/std",
    "frame-metadata/std",
    "hex/std",
    "log/std",
    "serde/std",
    "serde_json/std",
    "futures-util/std",
    # crates.io std only
    "url",
    # substrate no_std
    "sp-core/std",
    "sp-runtime/std",
    "sp-runtime-interface/std",
    "sp-storage/std",
    "sp-version/std",
    # substrate std
    "frame-support",
    # local deps
    "ac-compose-macros/std",
    "ac-node-api/std",
    "ac-primitives/std",
]
